package Eventos;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;

import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.event.player.PlayerMoveEvent;
import org.bukkit.event.player.PlayerTeleportEvent;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;

import net.md_5.bungee.api.ChatColor;

public class Inventario implements Listener {

	private List<String> jugadoresCongelados = new ArrayList<String>();

	public void crearInventario(Player jugador) {
		jugador.sendMessage("entre a inventario");

		Inventory inv = Bukkit.createInventory(null, 45, ChatColor.translateAlternateColorCodes('&', "&2A frezear"));
		ItemStack item = new ItemStack(Material.ICE);

		ItemMeta meta = item.getItemMeta();
		meta.setDisplayName(ChatColor.translateAlternateColorCodes('&', "&6FreezeadorINADOR"));
		List<String> lore = new ArrayList<String>();
		lore.add(ChatColor.translateAlternateColorCodes('&', "&7Congela todos los usuarios :)"));
		meta.setLore(lore);
		item.setItemMeta(meta);
		inv.setItem(20, item);

		item = new ItemStack(Material.LAVA_BUCKET);
		meta = item.getItemMeta();
		meta.setDisplayName(ChatColor.translateAlternateColorCodes('&', "&6Descongelar"));
		lore = new ArrayList<String>();
		lore.add(ChatColor.translateAlternateColorCodes('&', "&7Descongela todos los usuarios :("));
		meta.setLore(lore);
		item.setItemMeta(meta);
		inv.setItem(22, item);

		ItemStack decoracion = new ItemStack(Material.BLUE_STAINED_GLASS_PANE);
		int aux = 0;
		for (int i = 0; i < 5; i++) {
			for (int j = 0; j < 9; j++) {
				if (i % (5 - 1) != 0 && j % (9 - 1) != 0) {
					aux++;
				} else {
					inv.setItem(aux, decoracion);
					aux++;
				}
			}
		}
		jugador.openInventory(inv);
		return;

	}

	@EventHandler
	public void clickearInventario(InventoryClickEvent event) {
		String nombre = ChatColor.translateAlternateColorCodes('&', "&2A frezear");
		String nombreM = ChatColor.stripColor(nombre);
		Player jugador = (Player) event.getWhoClicked();
		jugador.sendMessage("test uwu");

		if (ChatColor.stripColor(event.getView().getTitle()).equals(nombreM)) {
			if (event.getCurrentItem() == null || event.getSlotType() == null
					|| event.getCurrentItem().getType() == Material.AIR) {
				event.setCancelled(true);
				return;
			} else {
				if (event.getCurrentItem().hasItemMeta()) {
					event.setCancelled(true);

					if (event.getSlot() == 20) {
						if (jugador.hasPermission("Freezeador.puedeFrezear")) {
							try {
								jugador.sendMessage(
										"Cantidad de jugadores " + Integer.toString(Bukkit.getOnlinePlayers().size()));
								Collection<Player> players = (Collection<Player>) Bukkit.getOnlinePlayers();
								for (Player listJugador : players) {
									if (jugador.getName() != listJugador.getName()
											|| !(jugador.hasPermission("freezeador.inmune"))) {
										listJugador.sendMessage("te van a congelar " + listJugador.getName());
										jugadoresCongelados.add(listJugador.getName());
										listJugador.closeInventory();
										listJugador.setWalkSpeed(0.0f);
										listJugador.setFlySpeed(0.0f);
										listJugador.setGravity(true);
										onMove(null);
										listJugador.sendMessage("Congelado (creo):V");
									}
								}
							} catch (Exception e) {
								e.printStackTrace();
							}
							return;
						} else {
							jugador.sendMessage("No tienes permiso :(");
							return;
						}

					} else if (event.getSlot() == 22) {
						if (jugador.hasPermission("freezeador.puedeFrezear")) {
							jugador.sendMessage("se va adescogelar el jugador:V tantos jugadores : "+jugadoresCongelados.size());

							Collection<Player> players = (Collection<Player>) Bukkit.getOnlinePlayers();
							for (Player listJugador : players) {
								if (jugadoresCongelados.contains(listJugador.getName())) {
									jugador.sendMessage("entre al if:V con tantos congelados: "+jugadoresCongelados.size()+"  nombres: "+listJugador.getName() );
									listJugador.sendMessage("entre al if:V");
									listJugador.setWalkSpeed(0.2f);
									listJugador.closeInventory();
									listJugador.setFlySpeed(0.2f);
									jugadoresCongelados.remove(jugador.getName());
									onMove(null);
									listJugador.sendMessage("jugadores congelados? "+jugadoresCongelados.size());
									listJugador.sendMessage("DES-Congelado :V");
									

								}
							}
							return;

						} else {
							jugador.sendMessage("No tienes permiso :(");
							return;
						}

					} else {
						return;
					}

				} else {
					event.setCancelled(true);

				}

			}

		}

	}

	@EventHandler
	public void onMove(PlayerMoveEvent e) {
		e.getPlayer().sendMessage("mi nombre "+e.getPlayer().getName());
		if (jugadoresCongelados.contains(e.getPlayer().getName())) {
			e.setCancelled(true);
		} else {
			e.setCancelled(false);
		}
	}

}
